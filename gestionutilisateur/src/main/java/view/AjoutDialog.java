package view;

import DAO.UtilisateurDao;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import model.MySQLConnexion;
import model.Utilisateur;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
/**
 *
 * @author i.mcolo
 */
public class AjoutDialog extends javax.swing.JDialog {

    private static Connection connexion;
    private ArrayList<Utilisateur> utilisateurs = new ArrayList<Utilisateur>();
    private UtilisateurDao uDao = new UtilisateurDao();

    /**
     * Creates new form AjoutDialog
     */
    public AjoutDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.connexion = MySQLConnexion.getConnexion();

    }

    private PropertyChangeSupport listeners = new PropertyChangeSupport(this);

    public void addPropertyChangeListener(PropertyChangeListener l) {
        this.listeners.addPropertyChangeListener(l);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAjouter = new javax.swing.JToggleButton();
        nomTextField1 = new javax.swing.JTextField();
        prenomTextField1 = new javax.swing.JTextField();
        emailTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnAjouter.setText("ajouter");
        btnAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjouterActionPerformed(evt);
            }
        });

        nomTextField1.setText("nom");

        prenomTextField1.setText("prenom");
        prenomTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prenomTextField1ActionPerformed(evt);
            }
        });

        emailTextField2.setText("email");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAjouter)
                    .addComponent(emailTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                    .addComponent(prenomTextField1)
                    .addComponent(nomTextField1))
                .addContainerGap(201, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(nomTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(prenomTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(emailTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAjouter)
                .addGap(117, 117, 117))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
// creation Méthode pour récupere les info d'ajout*

    public  String getNom(){
    
        return nomTextField1.getText();
    }
    
    public  String getPrenom(){
    
        return prenomTextField1.getText();
    }
    
    public  String getEmail(){
    
        return emailTextField2.getText();
    }
    
    private void btnAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjouterActionPerformed
        // TODO add your handling code here:
        listeners.firePropertyChange("btnAjouterClick", null, null);

//        uDao.insertUtilisateur(nomTextField1.getText(), prenomTextField1.getText(), emailTextField2.getText());
//        try {
//
//            String query = "insert into etudiant(nom,prenom,email) VALUES (?,?,?)";
//            PreparedStatement ps = this.connexion.prepareStatement(query);
//            ps.setString(1, nomTextField1.getText());
//            ps.setString(2, prenomTextField1.getText());
//            ps.setString(3, emailTextField2.getText());
//            
//            Utilisateur a = new Utilisateur(1,nomTextField1.getText(),prenomTextField1.getText(),emailTextField2.getText());
//            int n = ps.executeUpdate();
//            // n contient l'id générer lors de l'insertion en base
//            //ici on le recuper var c'est un insert (inutile dans le cas d'un update ou un delete)
//            a.setId(n);
//            
//            utilisateurs.add(a);
//        } 
//        catch (SQLException ex) {
//            
//        }
//        catch (SQLExeption ex) {
//            Logger.getLogger(UtilisateurDao.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_btnAjouterActionPerformed

    private void prenomTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prenomTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prenomTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AjoutDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AjoutDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AjoutDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AjoutDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AjoutDialog dialog = new AjoutDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnAjouter;
    private javax.swing.JTextField emailTextField2;
    private javax.swing.JTextField nomTextField1;
    private javax.swing.JTextField prenomTextField1;
    // End of variables declaration//GEN-END:variables
}
